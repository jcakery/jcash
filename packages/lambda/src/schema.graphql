### This file was generated by Nexus Schema
### Do not make changes to this file directly

input AllUsersConnectionWhere {
    activated: Boolean
}

"""
The `BigInt` scalar type represents non-fractional signed whole numeric values.
@see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/BigInt
"""
scalar BigInt

"""
The `Byte` scalar type represents byte value as a Buffer
"""
scalar Bytes

"""
A date-time string at UTC, such as 2007-12-03T10:15:30Z, compliant with the `date-time` format outlined in section 5.6 of the RFC 3339 profile of the ISO 8601 standard for representation of dates and times using the Gregorian calendar.
"""
scalar DateTime

"""
An arbitrary-precision Decimal type
"""
scalar Decimal

type HelloType {
    errors: [String]!
    message: String!
    success: Boolean!
}

"""
The `JSONObject` scalar type represents JSON objects as specified by [ECMA-404](http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf).
"""
scalar Json
    @specifiedBy(
        url: "http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf"
    )

interface Node {
    """
    Relay ID
    """
    id: ID!
}

"""
PageInfo cursor, as defined in https://facebook.github.io/relay/graphql/connections.htm#sec-undefined.PageInfo
"""
type PageInfo {
    """
    The cursor corresponding to the last nodes in edges. Null if the connection is empty.
    """
    endCursor: String

    """
    Used to indicate whether more edges exist following the set defined by the clients arguments.
    """
    hasNextPage: Boolean!

    """
    Used to indicate whether more edges exist prior to the set defined by the clients arguments.
    """
    hasPreviousPage: Boolean!

    """
    The cursor corresponding to the first nodes in edges. Null if the connection is empty.
    """
    startCursor: String
}

type Query {
    allUsers(
        """
        Returns the elements in the list that come after the specified cursor
        """
        after: String

        """
        Returns the first n elements from the list.
        """
        first: Int!
        where: AllUsersConnectionWhere
    ): UserConnection!
    hello: HelloType
    node(id: ID!): Node
}

"""
Must and only use for input
"""
scalar RelayId

type User implements Node {
    activated: Boolean!
    createdAt: DateTime!

    """
    Relay ID
    """
    id: ID!
    password: String!
    username: String!
}

type UserConnection {
    """
    https://facebook.github.io/relay/graphql/connections.htm#sec-Edge-Types
    """
    edges: [UserEdge!]!

    """
    https://facebook.github.io/relay/graphql/connections.htm#sec-undefined.PageInfo
    """
    pageInfo: PageInfo!
}

type UserEdge {
    """
    https://facebook.github.io/relay/graphql/connections.htm#sec-Cursor
    """
    cursor: String!

    """
    https://facebook.github.io/relay/graphql/connections.htm#sec-Node
    """
    node: User!
}
